{
  "config": {
    "step": {
      "user": {
        "description": "Set required parameter to connect to your FEMS / OpenEMS system",
        "data": {
          "host": "[%key:common::config_flow::data::host%]",
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]",
          "url": "Custom URL",
          "type": "Connection type"
        },
        "data_description": {
          "host": "The hostname or IP address of your Fenecon or OpenEMS system",
          "username": "The username to access the system. Use \"x\" for local monitoring access",
          "password": "For local monitoring, common values are \"user\" or \"owner\"",
          "url": "Custom Websocket URL, eg: ws://192.168.1.100:8888/websocket"


        }
      },
      "edges": {
        "data": {
          "edges": "OpenEMS Edge to be integrated"
        }
      }
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "invalid_auth": "[%key:common::config_flow::error::invalid_auth%]",
      "unknown": "[%key:common::config_flow::error::unknown%]",
      "host_missing": "Please provide host for local connection",
      "custom_url_missing": "Custom URL must not be empty",
      "invalid_url": "Invalid URL provided",
      "url_not_absolute": "Custom URL must be absolute",
      "cannot_read_components": "Cannot read edge components",
      "error_processing_edge": "Error during processing the selected edge"
    },
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_device%]"
    }
  },
  "entity": {
    "sensor": {
      "ctrlGridOptimizedCharge/DelayChargeState": {
        "state": {
          "Undefined": "Undefined",
          "Active limit": "Active limit",
          "No remaining time": "No remaining time",
          "No remaining capacity": "No remaining capacity",
          "Target minute not calculated": "Target minute not calculated",
          "Limit cannot be adapted because of other constraints with higher priority": "Limit cannot be adapted because of other constraints with higher priority",
          "No active limitation": "No active limitation",
          "Delay charge part is disabled": "Delay charge part is disabled",
          "Delay charge was not started because there is no production or to less production": "Delay charge was not started because there is no production or to less production",
          "Avoid charging with low power for more efficiency": "Avoid charging with low power for more efficiency"
        }
      },
      "evcs/Status": {
        "state": {
          "Undefined": "Undefined",
          "Starting": "Starting",
          "Not ready for Charging": "Not ready for Charging",
          "Ready for Charging": "Ready for Charging",
          "Charging": "Ladevorgang aktiv",
          "Error": "Error",
          "Charging rejected": "Charging rejected",
          "The charging limit reached": "The charging limit reached"
        }
      }
    },
    "select": {
      "ctrlGridOptimizedCharge/DelayChargeRiskLevel": {
        "state": {
          "LOW": "Low",
          "MEDIUM": "Medium",
          "HIGH": "High"
        }
      },
      "ctrlEvcs/ChargeMode": {
        "state": {
          "FORCE_CHARGE": "Force charge",
          "EXCESS_POWER": "Excess power"
        }
      },
      "ctrlEvcs/Priority": {
        "state": {
          "CAR": "Car",
          "STORAGE": "Storage"
        }
      },
      "ctrlGridOptimizedCharge/Mode": {
        "state": {
          "OFF": "Off",
          "AUTOMATIC": "Automatic",
          "MANUAL": "Manual"
        }
      },
      "ctrlIoHeatingElement/DefaultLevel": {
        "state": {
          "LEVEL_1": "Level 1",
          "LEVEL_2": "Level 2",
          "LEVEL_3": "Level 3"
        }
      },
      "ctrlIoHeatingElement/Mode": {
        "state": {
          "AUTOMATIC": "Automatic",
          "MANUAL_ON": "On",
          "MANUAL_OFF": "Off"
        }
      }
    }
  },
  "selector": {
    "connection_type": {
      "options": {
        "local_fems": "FEMS local monitoring (port 80)",
        "local_openems": "OpenEMS local monitoring (port 8082)",
        "direct_edge": "Direct edge Websocket connection (port 8085)",
        "web_fenecon": "Fenecon online monitoring at portal.fenecon.de (hostname option will not be used)",
        "custom_url": "Custom Websocket URL (hostname option will not be used)"
      }
    }
  }
}
